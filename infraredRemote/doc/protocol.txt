protocol

0	32	 64	   96      128b
|--------|--------|--------|--------|
|  head  | length | CTL    |reserved|
|--------|--------|--------|--------|
| msgType|         data             |
|--------|--------|--------|--------|



head :  0x670x670xdf0xef

length : CTL + reserved + msgType + data

CTL  :  0x00000000 | totalPack << 16  | numPack<<8 |  deviceType

msgType:  0x |  msgID << 16 | msgType


每个包不过4K, 所以length不过超过14位
msgID只有8位? 是否应该把msgType和msgID交换? 
不加tail,如果length因为干扰乱了就没了验证包的后备机制,是否应该补充上?
totalPad和numPad都是从0开始还是1?
是否应该添加DEVICE ID, 如电视机这类型,但可能有多台电视机?


每个包不过4K, 所以length不过超过14位。Length 不超过14位是正常。用32位是为了字节对齐。
防系统自动对齐而错左位。所以用32位。


msgID 和msgType各占16位。交换不交换意义不大。
totalPad和numPad都是从1开始，因为系NUM不是位置。通常位置指针由0开始，代表数目的由1开始


是否应该添加DEVICE ID, 如电视机这类型,但可能有多台电视机
属于业务逻辑。在DATA里面自己定义
DATA里面系map<string,string> 可以用STRING这个KEY来自己区分开


收集红外指令时每条指令都是独立完整的,理论上不可以从红外找到设备的信息,也就是所有指令都是未分类设备指令?
如果都是未分类指令的话,不就像电话本里未分类的电话那样,deviceType就成了非硬性了?是否降为业务逻辑中?

deviceType指系统内部的DEVICE。不是指红外控制的DEVICE
为左以后区分有这个红外控制这样的一种DEVICE 以后可能有串口控制设备、状态控制设备


业务逻辑扩展需求:
读取所有自定义设备(如电视,空调,灯光)
保存所有自定义设备(如电视,空调,灯光)
读取所有指令(如开电视,关灯)
保所有指令(如开电视,关灯)
读取某设备参数(如电视的自定义图标,名称)
保存某设备参数(如电视的自定义图标,名称)
读取某指令参数(如开电视的自定义图标,名称,指令UI的外形,XY值)
保存某指令参数(如开电视的自定义图标,名称,指令UI的外形,XY值)




